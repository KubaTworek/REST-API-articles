(()=>{var n={753:function(n){var e;e=function(){return function(n){var e={};function t(o){if(e[o])return e[o].exports;var i=e[o]={exports:{},id:o,loaded:!1};return n[o].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}return t.m=n,t.c=e,t.p="",t(0)}([function(n,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n};function o(){return!("undefined"==typeof window||!window.history||!window.history.pushState)}function i(n,e,t){this.root=null,this._routes=[],this._useHash=e,this._hash=void 0===t?"#":t,this._paused=!1,this._destroyed=!1,this._lastRouteResolved=null,this._notFoundHandler=null,this._defaultHandler=null,this._usePushState=!e&&o(),this._onLocationChange=this._onLocationChange.bind(this),this._genericHooks=null,n?this.root=e?n.replace(/\/$/,"/"+this._hash):n.replace(/\/$/,""):e&&(this.root=this._cLoc().split(this._hash)[0].replace(/\/$/,"/"+this._hash)),this._listen(),this.updatePageLinks()}function r(n){return n instanceof RegExp?n:n.replace(/\/+$/,"").replace(/^\/+/,"/")}function a(n){return n.replace(/\/$/,"").split("/").length}function s(n,e){return a(e)-a(n)}function d(n){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:[]).map((function(e){var t=function(n){var e=[];return{regexp:n instanceof RegExp?n:new RegExp(r(n).replace(i.PARAMETER_REGEXP,(function(n,t,o){return e.push(o),i.REPLACE_VARIABLE_REGEXP})).replace(i.WILDCARD_REGEXP,i.REPLACE_WILDCARD)+i.FOLLOWED_BY_SLASH_REGEXP,i.MATCH_REGEXP_FLAGS),paramNames:e}}(e.route),o=t.regexp,a=t.paramNames,s=n.match(o),d=function(n,e){return 0===e.length?null:n?n.slice(1,n.length).reduce((function(n,t,o){return null===n&&(n={}),n[e[o]]=decodeURIComponent(t),n}),null):null}(s,a);return!!s&&{match:s,route:e,params:d}})).filter((function(n){return n}))}function c(n,e){return d(n,e)[0]||!1}function l(n,e){var t=d(n,e.filter((function(n){var e=r(n.route);return""!==e&&"*"!==e}))),o=r(n);return t.length>0?t.map((function(e){return r(n.substr(0,e.match.index))})).reduce((function(n,e){return e.length<n.length?e:n}),o):o}function u(n,e,o){e&&"object"===(void 0===e?"undefined":t(e))?e.before?e.before((function(){(!(arguments.length>0&&void 0!==arguments[0])||arguments[0])&&(n(),e.after&&e.after(o))}),o):e.after&&(n(),e.after&&e.after(o)):n()}i.prototype={helpers:{match:c,root:l,clean:r},navigate:function(n,e){var t;return n=n||"",this._usePushState?(t=(t=(e?"":this._getRoot()+"/")+n.replace(/^\/+/,"/")).replace(/([^:])(\/{2,})/g,"$1/"),history[this._paused?"replaceState":"pushState"]({},"",t)):"undefined"!=typeof window&&(n=n.replace(new RegExp("^"+this._hash),""),window.location.href=window.location.href.replace(/#$/,"").replace(new RegExp(this._hash+".*$"),"")+this._hash+n),this},on:function(){for(var n=this,e=arguments.length,o=Array(e),i=0;i<e;i++)o[i]=arguments[i];if("function"==typeof o[0])this._defaultHandler={handler:o[0],hooks:o[1]};else if(o.length>=2)if("/"===o[0]){var r=o[1];"object"===t(o[1])&&(r=o[1].uses),this._defaultHandler={handler:r,hooks:o[2]}}else this._add(o[0],o[1],o[2]);else"object"===t(o[0])&&Object.keys(o[0]).sort(s).forEach((function(e){n.on(e,o[0][e])}));return this},off:function(n){return null!==this._defaultHandler&&n===this._defaultHandler.handler?this._defaultHandler=null:null!==this._notFoundHandler&&n===this._notFoundHandler.handler&&(this._notFoundHandler=null),this._routes=this._routes.reduce((function(e,t){return t.handler!==n&&e.push(t),e}),[]),this},notFound:function(n,e){return this._notFoundHandler={handler:n,hooks:e},this},resolve:function(n){var e,t,i=this,r=(n||this._cLoc()).replace(this._getRoot(),"");this._useHash&&(r=r.replace(new RegExp("^/"+this._hash),"/"));var a=function(n){return n.split(/\?(.*)?$/).slice(1).join("")}(n||this._cLoc()),s=function(n,e,t){var i=n.split(/\?(.*)?$/)[0];return void 0===t&&(t="#"),o()&&!e&&(i=i.split(t)[0]),i}(r,this._useHash,this._hash);return!(this._paused||this._lastRouteResolved&&s===this._lastRouteResolved.url&&a===this._lastRouteResolved.query)&&((t=c(s,this._routes))?(this._callLeave(),this._lastRouteResolved={url:s,query:a,hooks:t.route.hooks},e=t.route.handler,u((function(){u((function(){t.route.route instanceof RegExp?e.apply(void 0,function(n){if(Array.isArray(n)){for(var e=0,t=Array(n.length);e<n.length;e++)t[e]=n[e];return t}return Array.from(n)}(t.match.slice(1,t.match.length))):e(t.params,a)}),t.route.hooks,t.params,i._genericHooks)}),this._genericHooks),t):this._defaultHandler&&(""===s||"/"===s||s===this._hash||function(n,e,t){if(o()&&!e)return!1;if(!n.match(t))return!1;var i=n.split(t);return i.length<2||""===i[1]}(s,this._useHash,this._hash))?(u((function(){u((function(){i._callLeave(),i._lastRouteResolved={url:s,query:a,hooks:i._defaultHandler.hooks},i._defaultHandler.handler(a)}),i._defaultHandler.hooks)}),this._genericHooks),!0):(this._notFoundHandler&&u((function(){u((function(){i._callLeave(),i._lastRouteResolved={url:s,query:a,hooks:i._notFoundHandler.hooks},i._notFoundHandler.handler(a)}),i._notFoundHandler.hooks)}),this._genericHooks),!1))},destroy:function(){this._routes=[],this._destroyed=!0,clearTimeout(this._listenningInterval),"undefined"!=typeof window&&(window.removeEventListener("popstate",this._onLocationChange),window.removeEventListener("hashchange",this._onLocationChange))},updatePageLinks:function(){var n=this;"undefined"!=typeof document&&this._findLinks().forEach((function(e){e.hasListenerAttached||(e.addEventListener("click",(function(t){var o=n.getLinkPath(e);n._destroyed||(t.preventDefault(),n.navigate(r(o)))})),e.hasListenerAttached=!0)}))},generate:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=this._routes.reduce((function(t,o){var i;if(o.name===n)for(i in t=o.route,e)t=t.toString().replace(":"+i,e[i]);return t}),"");return this._useHash?this._hash+t:t},link:function(n){return this._getRoot()+n},pause:function(){var n=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this._paused=n},resume:function(){this.pause(!1)},disableIfAPINotAvailable:function(){o()||this.destroy()},lastRouteResolved:function(){return this._lastRouteResolved},getLinkPath:function(n){return n.pathname||n.getAttribute("href")},hooks:function(n){this._genericHooks=n},_add:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return"string"==typeof n&&(n=encodeURI(n)),"object"===(void 0===e?"undefined":t(e))?this._routes.push({route:n,handler:e.uses,name:e.as,hooks:o||e.hooks}):this._routes.push({route:n,handler:e,hooks:o}),this._add},_getRoot:function(){return null!==this.root||(this.root=l(this._cLoc().split("?")[0],this._routes)),this.root},_listen:function(){var n=this;if(this._usePushState)window.addEventListener("popstate",this._onLocationChange);else if("undefined"!=typeof window&&"onhashchange"in window)window.addEventListener("hashchange",this._onLocationChange);else{var e=this._cLoc(),t=void 0,o=void 0;(o=function(){t=n._cLoc(),e!==t&&(e=t,n.resolve()),n._listenningInterval=setTimeout(o,200)})()}},_cLoc:function(){return"undefined"!=typeof window?void 0!==window.__NAVIGO_WINDOW_LOCATION_MOCK__?window.__NAVIGO_WINDOW_LOCATION_MOCK__:r(window.location.href):""},_findLinks:function(){return[].slice.call(document.querySelectorAll("[data-navigo]"))},_onLocationChange:function(){this.resolve()},_callLeave:function(){this._lastRouteResolved&&this._lastRouteResolved.hooks&&this._lastRouteResolved.hooks.leave&&this._lastRouteResolved.hooks.leave()}},i.PARAMETER_REGEXP=/([:*])(\w+)/g,i.WILDCARD_REGEXP=/\*/g,i.REPLACE_VARIABLE_REGEXP="([^/]+)",i.REPLACE_WILDCARD="(?:.*)",i.FOLLOWED_BY_SLASH_REGEXP="(?:/$|$)",i.MATCH_REGEXP_FLAGS="",e.default=i,n.exports=e.default}])},n.exports=e()}},e={};function t(o){var i=e[o];if(void 0!==i)return i.exports;var r=e[o]={exports:{}};return n[o].call(r.exports,r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{"use strict";var n=t(753),e=t.n(n);class o{static instance=null;headers={Accept:"application/json","Content-Type":"application/json"};constructor(){return o.instance||(o.instance=this),o.instance}static getInstance(){return o.instance||new o}doGet=n=>fetch(`${n}`,{headers:this.headers}).then((n=>n.json())).catch((n=>console.log(n)));doPost=(n,e,t)=>fetch(`${n}`,{headers:t,method:"POST",body:e}).catch((n=>console.log(n)));doDelete=(n,e)=>fetch(`${n}`,{headers:e,method:"DELETE"}).catch((n=>console.log(n)));doLogin=(n,e)=>fetch(`${n}`,{method:"POST",headers:this.headers,body:e}).then((n=>n.json())).catch((n=>console.log(n)));doRegister=(n,e)=>fetch(`${n}`,{method:"POST",headers:this.headers,body:e}).catch((n=>alert(n)));doUserInfo=(n,e)=>fetch(`${n}`,{headers:e}).then((n=>n.json())).catch((n=>alert(n)))}class i extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.shadowRoot.innerHTML=this.render(),this.shadowRoot.addEventListener("click",this._handleBackdropClick),this.shadowRoot.getElementById("cancel-button").addEventListener("click",this.cancel.bind(this))}open(){this.setAttribute("opened","")}hide(){this.removeAttribute("opened")}cancel(n){this.hide();const e=new Event("cancel",{bubbles:!0,composed:!0});n.target.dispatchEvent(e)}_handleBackdropClick=n=>{"backdrop"===n.target.id&&this.cancel()}}class r extends i{constructor(n,e){super(),this.shadowRoot.innerHTML=this.render(n),this.url=e}connectedCallback(){super.connectedCallback(),this.shadowRoot.getElementById("confirm-button").addEventListener("click",this.delete.bind(this))}delete(){const n={Accept:"application/json","Content-Type":"application/json",Authorization:sessionStorage.getItem("jwt")};o.getInstance().doDelete(this.url,n).then((()=>location.reload())),this.hide()}render(n){return`\n            <style>\n              #backdrop {\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100vh;\n                background: rgba(0, 0, 0, 0.75);\n                z-index: 10;\n                opacity: 0;\n                pointer-events: none;\n              }\n        \n              :host([opened]) #backdrop,\n              :host([opened]) #background {\n                opacity: 1;\n                pointer-events: all;\n              }\n        \n              :host([opened]) #background {\n                top: 15vh;\n              }\n        \n              #background {\n                position: fixed;\n                top: 10vh;\n                left: 25%;\n                width: 50%;\n                z-index: 100;\n                background: white;\n                border-radius: 3px;\n                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n                opacity: 0;\n                pointer-events: none;\n                transition: all 0.3s ease-out;\n              }\n        \n              header {\n                padding: 1rem;\n                border-bottom: 1px solid #ccc;\n              }\n        \n              ::slotted(h1) {\n                font-size: 1.25rem;\n                margin: 0;\n              }\n        \n              #content {\n                padding: 1rem;\n              }\n        \n              #buttons-container {\n                border-top: 1px solid #ccc;\n                padding: 1rem;\n                display: flex;\n                justify-content: flex-end;\n              }\n        \n              #buttons-container button:not(:last-child) {\n                margin-right: 0.25rem;\n              }\n            </style>\n        \n            <div id="backdrop"></div>\n            <div id="background">\n              <section id="content">\n                <p>${n}</p>\n              </section>\n              <section id="buttons-container">\n                <button id="cancel-button">Cancel</button>\n                <button id="confirm-button">Ok</button>\n              </section>\n            </div>\n    `}}customElements.define("article-delete",r);const a="http://localhost:3000/articles/api/",s="http://localhost:3000/auth/api/";class d extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}set setArticle(n){this.article=n,this.render()}delete(){const n=new r("Would you like to delete Article?",a+this.article.id);this.articleCard.appendChild(n),n.open()}like(){const n={Accept:"application/json","Content-Type":"application/json",Authorization:sessionStorage.getItem("jwt")};o.getInstance().doPost(`${a}like/${this.id}`,null,n).then((()=>{this.addLike()})).catch((n=>{console.error(`Failed to add like: ${n}`)}))}addLike(){const n=this.shadowRoot.querySelector(".likes"),e=parseInt(n.innerText);n.innerText=e+1}getTimeElapsed(n){const e=(new Date).getTime()-n.getTime();return e<6e4?Math.floor(e/1e3)+"s":e<36e5?Math.floor(e/6e4)+"m":e<864e5?Math.floor(e/36e5)+"h":e<6048e5?Math.floor(e/864e5)+"day":Math.floor(e/6048e5)+"week"}render(){const{author_firstName:n,author_lastName:e,author_username:t,text:o,id:i,timestamp:r,numOfLikes:a}=this.article||{},s=new Date(r),d=this.getTimeElapsed(s);this.shadowRoot.innerHTML=`\n            <style>\n              .article-card {\n                background-color: #111;\n                border-bottom: 1px solid #444;\n                border-top: none;\n                box-sizing: border-box;\n                color: #eee;\n                display: block;\n                padding: 0 0.8rem;\n              }\n              \n              .name {\n                font-weight: 700;\n                text-align: left;\n              }\n              \n              .username {\n                color: #666;\n                font-weight: 500;\n                text-align: left;\n              }\n              \n              .content {\n                text-align: justify;\n              }\n              \n              .id {\n                display: none;\n              }\n              \n              #like-button {\n                font-size: 1.2rem;\n                cursor: pointer;\n              }\n            \n              .likes {\n                font-size: 1rem;\n                margin-left: 5px;\n              }             \n            </style>\n    \n            <div class="article-card">\n                <p class="name">${n} ${e} <span class="username">@${t}  •  ${d}</span></p>\n                <p class="content">${o}</p>\n                <p class="id">${i}</p>\n                <div>\n                    <p><span id="like-button">👍</span><span class="likes">${a}</span>   </p>             \n                    <button id="delete-button">Delete</button>\n                </div>\n            </div>\n        `,this.articleCard=this.shadowRoot.querySelector(".article-card"),this.id=this.shadowRoot.querySelector(".id").innerText,this.shadowRoot.getElementById("delete-button").addEventListener("click",this.delete.bind(this)),this.shadowRoot.getElementById("like-button").addEventListener("click",this.like.bind(this))}}customElements.define("article-card",d);class c extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.shadowRoot.innerHTML=this.render(),this.shadowRoot.getElementById("send-button").addEventListener("click",this.postData.bind(this))}postData=n=>{n.preventDefault();const e={title:"title",text:this.shadowRoot.getElementById("post-content").value},t={Accept:"application/json","Content-Type":"application/json",Authorization:sessionStorage.getItem("jwt")};o.getInstance().doPost(a,JSON.stringify(e),t).then((()=>location.reload()))};render(){return'\n            <style>\n                #input-bar {\n                    display: grid;\n                    grid-template-columns: 1fr auto;\n                    align-items: center;\n                    justify-content: space-between;\n                    width: 80%;\n                }\n            \n                #post-content {\n                    background-color: #111;\n                    border: none;\n                    box-sizing: border-box;\n                    color: #eee;\n                    font-size: 1rem;\n                    height: 100%;\n                    outline: none;\n                    padding: 0.5rem;\n                    resize: none;\n                    overflow: hidden;\n                    grid-column: 1 / span 2;\n                }\n            \n                #send-button {\n                    position: absolute;\n                    right: 2%;\n                    top:75%;\n                    background-color: red;\n                    border: none;\n                    border-radius: 9999px;\n                    color: #eee;\n                    cursor: pointer;\n                    font-size: 0.9rem;\n                    font-weight: 700;\n                    padding: 6px 14px;\n                    text-align: center;\n                    text-decoration: none;\n                    transition: background-color 0.3s ease-out;\n                }\n            \n                #send-button:hover {\n                    background-color: #cc0000;\n                }\n            \n                @media screen and (max-width: 600px) {\n                    #input-bar {\n                        grid-template-columns: 1fr;\n                        grid-template-rows: auto auto;\n                    }\n                }\n            </style>\n            \n            <div id="input-bar">\n                <textarea id="post-content" placeholder="What\'s happening?"></textarea>\n                <button id="send-button">SEND</button>\n            </div>\n    '}}customElements.define("article-post",c);class l extends i{connectedCallback(){super.connectedCallback(),this.shadowRoot.getElementById("submit-button").addEventListener("click",this.submit.bind(this))}async submit(n){n.preventDefault(),this.authorize(),this.hide()}getData(n){const e={};for(const t of n){const n=this.shadowRoot.getElementById(t);n&&(e[t]=n.value)}return e}}class u extends l{connectedCallback(){super.connectedCallback()}authorize(){const n=this.getData(["username","password"]);o.getInstance().doLogin(s+"login",JSON.stringify(n)).then((n=>{sessionStorage.setItem("jwt",n.jwt),window.location.reload()}))}render(){return'\n            <style>\n              :host([opened]) #backdrop,\n              :host([opened]) #background {\n                opacity: 1;\n                pointer-events: all;\n              }\n            \n              :host([opened]) #background {\n                top: 15vh;\n              }\n            \n              #backdrop {\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100vh;\n                background: rgba(0, 0, 0, 0.75);\n                z-index: 10;\n                opacity: 0;\n                pointer-events: none;\n              }\n            \n              #background {\n                position: fixed;\n                top: 10vh;\n                left: 25%;\n                width: 50%;\n                z-index: 100;\n                background: white;\n                border-radius: 3px;\n                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                opacity: 0;\n                pointer-events: none;\n                transition: all 0.3s ease-out;\n              }\n            \n              form {\n                max-width: 400px;\n                margin: 50px auto;\n                padding: 20px;\n                background-color: #fff;\n                border-radius: 5px;\n                box-shadow: 0 0 10px #ccc;\n              }\n            \n              input[type=text],\n              input[type=password] {\n                width: 100%;\n                padding: 10px;\n                margin: 8px 0;\n                border: 1px solid #ccc;\n                border-radius: 4px;\n                box-sizing: border-box;\n              }\n            \n              button {\n                width: 100%;\n                background-color: #4CAF50;\n                color: white;\n                padding: 10px 20px;\n                margin: 8px 0;\n                border: none;\n                border-radius: 4px;\n                cursor: pointer;\n              }\n            \n              button:hover {\n                background-color: #45a049;\n              }\n            </style>\n            \n            <div id="backdrop"></div>\n            <div id="background">\n                <form id="login-form">\n                    <h2>Logowanie</h2>\n                    <label for="username">Nazwa użytkownika:</label>\n                    <input type="text" id="username" name="username" placeholder="Podaj nazwę użytkownika">\n        \n                    <label for="password">Hasło:</label>\n                    <input type="password" id="password" name="password" placeholder="Podaj hasło">\n        \n                    <button id="cancel-button">Anuluj</button>\n                    <button id="submit-button">Zaloguj</button>\n                </form>\n            </div>\n    '}}customElements.define("login-form",u);class h extends l{connectedCallback(){super.connectedCallback()}submit(){sessionStorage.removeItem("jwt")}render(){return'\n            <style>\n              :host([opened]) #backdrop,\n              :host([opened]) #background {\n                opacity: 1;\n                pointer-events: all;\n              }\n        \n              :host([opened]) #background {\n                top: 15vh;\n              }\n        \n              #backdrop {\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100vh;\n                background: rgba(0, 0, 0, 0.75);\n                z-index: 10;\n                opacity: 0;\n                pointer-events: none;\n              }\n        \n              #background {\n                position: fixed;\n                top: 10vh;\n                left: 25%;\n                width: 50%;\n                z-index: 100;\n                background: white;\n                border-radius: 3px;\n                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                opacity: 0;\n                pointer-events: none;\n                transition: all 0.3s ease-out;\n              }\n        \n              form {\n                max-width: 400px;\n                margin: 50px auto;\n                padding: 20px;\n                background-color: #fff;\n                border-radius: 5px;\n                box-shadow: 0 0 10px #ccc;\n              }\n        \n              input[type=text],\n              input[type=password] {\n                width: 100%;\n                padding: 10px;\n                margin: 8px 0;\n                border: 1px solid #ccc;\n                border-radius: 4px;\n                box-sizing: border-box;\n              }\n        \n              button {\n                width: 100%;\n                background-color: #4CAF50;\n                color: white;\n                padding: 10px 20px;\n                margin: 8px 0;\n                border: none;\n                border-radius: 4px;\n                cursor: pointer;\n              }\n        \n              button:hover {\n                background-color: #45a049;\n              }\n            </style>\n        \n            <div id="backdrop"></div>\n            <div id="background">\n              <form>\n                <h2>Na pewno chcesz się wylogowac?</h2>\n                <button id="cancel-button">No</button>\n                <button id="submit-button">Yes</button>\n              </form>\n            </div>\n    '}}customElements.define("logout-form",h);class p extends l{connectedCallback(){super.connectedCallback()}authorize(){const n=this.getData(["username","password","firstName","lastName","role"]);o.getInstance().doRegister(s+"register",JSON.stringify(n))}render(){return'\n            <style>\n              :host([opened]) #backdrop,\n              :host([opened]) #background {\n                opacity: 1;\n                pointer-events: all;\n              }\n            \n              :host([opened]) #background {\n                top: 15vh;\n              }\n            \n              #backdrop {\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100vh;\n                background: rgba(0, 0, 0, 0.75);\n                z-index: 10;\n                opacity: 0;\n                pointer-events: none;\n              }\n            \n              #background {\n                position: fixed;\n                top: 10vh;\n                left: 25%;\n                width: 50%;\n                z-index: 100;\n                background: white;\n                border-radius: 3px;\n                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                opacity: 0;\n                pointer-events: none;\n                transition: all 0.3s ease-out;\n              }\n            \n              form {\n                max-width: 400px;\n                margin: 50px auto;\n                padding: 20px;\n                background-color: #fff;\n                border-radius: 5px;\n                box-shadow: 0 0 10px #ccc;\n              }\n            \n              input[type=text],\n              input[type=password] {\n                width: 100%;\n                padding: 10px;\n                margin: 8px 0;\n                border: 1px solid #ccc;\n                border-radius: 4px;\n                box-sizing: border-box;\n              }\n            \n              button {\n                width: 100%;\n                background-color: #4CAF50;\n                color: white;\n                padding: 10px 20px;\n                margin: 8px 0;\n                border: none;\n                border-radius: 4px;\n                cursor: pointer;\n              }\n            \n              button:hover {\n                background-color: #45a049;\n              }\n              \n              #role {\n              display: none;\n              }\n            </style>\n\n        <div id="backdrop"></div>\n        <div id="background">\n            <form id="register-form">\n                <h2>Rejestracja</h2>\n                <label for="username">Nazwa użytkownika:</label>\n                <input type="text" id="username" name="username" placeholder="Podaj nazwę użytkownika">\n        \n                <label for="password">Hasło:</label>\n                <input type="password" id="password" name="password" placeholder="Podaj hasło">\n                \n                <label for="confirm_password">Potwierdź hasło:</label>\n                <input type="password" id="confirm_password" name="confirm_password" placeholder="Potwierdź hasło">\n                \n                <label for="firstName">Imię:</label>\n                <input type="text" id="firstName" name="firstName" placeholder="Podaj imię">\n                            \n                <label for="lastName">Nazwisko:</label>\n                <input type="text" id="lastName" name="lastName" placeholder="Podaj nazwisko">\n                \n                <input type="text" id="role" name="role" value="ROLE_USER">\n        \n                <button id="cancel-button">Cancel</button>\n                <button id="submit-button">Ok</button>\n            </form>\n        </div>\n    '}}customElements.define("registration-form",p);class g{static create(n){switch(n){case"login":return new u;case"logout":return new h;case"registration":return new p;default:throw new Error("Invalid modal type")}}}class b extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}createModal(n){const e=g.create(n);this.shadowRoot.appendChild(e),e.open()}}class f extends b{constructor(){super()}connectedCallback(){this.shadowRoot.innerHTML=this.render(),this.shadowRoot.getElementById("login-button").addEventListener("click",(()=>this.createModal("login"))),this.shadowRoot.getElementById("register-button").addEventListener("click",(()=>this.createModal("registration")))}render(){return'\n            <style>\n              button {\n                width: 8rem;\n                background-color: red;\n                border: none;\n                color: white;\n                padding: 0.5rem 1rem;\n                text-align: center;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 1rem;\n                margin: 0.5rem;\n                cursor: pointer;\n                border-radius: 4px;\n                transition: background-color 0.3s ease-out;\n              }\n              button:hover {\n                background-color: #cc0000;\n              }\n            </style>\n            \n            <button id="login-button">LOGIN</button>\n            <button id="register-button">REGISTER</button>\n    '}}customElements.define("authorization-anonymous",f);class m extends b{constructor(){super(),this.getUser()}async getUser(){const n=await this.getContext();this.shadowRoot.innerHTML=this.render(n),this.shadowRoot.getElementById("logout-button").addEventListener("click",(()=>this.createModal("logout")))}async getContext(){const n={Accept:"application/json","Content-Type":"application/json",Authorization:sessionStorage.getItem("jwt")};return await o.getInstance().doUserInfo(s+"user-info",n)}render(n){return`\n            <style>\n              section {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                margin: 0 0.5rem;\n              }\n              \n              p {\n                margin: 0.5rem auto;\n                color: white;\n                font-size: 1.2rem;\n              }\n                \n              button {\n                width: 8rem;\n                background-color: red;\n                border: none;\n                color: white;\n                padding: 0.5rem 1rem;\n                text-align: center;\n                text-decoration: none;\n                display: inline-block;\n                font-size: 1rem;\n                margin: 0.5rem;\n                cursor: pointer;\n                border-radius: 4px;\n                transition: background-color 0.3s ease-out;\n              }\n              button:hover {\n                background-color: #cc0000;\n              }\n            </style>\n            \n            <section> \n                <p>Hello, ${n.firstName} ${n.lastName}</p>\n                <button id="logout-button">LOGOUT</button>   \n            </section>\n    `}}customElements.define("authorization-authenticated",m);class w{static create(){return null==sessionStorage.getItem("jwt")?new f:new m}}class x extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.shadowRoot.innerHTML=this.render(),this.dataList=this.shadowRoot.getElementById("data-list"),this.input=this.shadowRoot.getElementById("search-input"),this.authorizationBoard=this.shadowRoot.getElementById("authorization-board"),this.authorizationBoard.appendChild(w.create()),this.inputBar=this.shadowRoot.getElementById("input-bar"),this.inputBar.appendChild(new c),this.shadowRoot.getElementById("search-input").addEventListener("keyup",(n=>{this.getData(n)})),this.getData()}async getData(n){const e=()=>(this.dataList.innerHTML="",this.getArticles().catch((n=>console.log(n))));n&&"Enter"===n.key?(n.preventDefault(),await e(),this.input.value=""):""===this.input.value&&await e()}async getArticles(){const n=await o.getInstance().doGet(a+this.input.value);return this.renderArticles(n),n}renderArticles(n){for(const e of n){const n=document.createElement("li"),t=new d;t.setArticle=e,n.appendChild(t),this.dataList.appendChild(n)}}render(){return'\n            <style>\n              #background {\n                max-width: 40rem;\n                align-items: center;\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                margin: auto;\n              }\n              \n              #authorization-board {\n                display: flex;\n                align-items: center;\n                flex-direction: column;\n                justify-content: center;\n              }\n              \n              #main-board {\n                align-items: center;\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                margin: auto;\n                width: 80%;\n              }\n              \n              #search-input {\n                background-color: #444;\n                border: 1px solid #444;\n                border-radius: 8px;\n                box-sizing: border-box;\n                color: #eee;\n                font-size: 1rem;\n                height: 2rem;\n                margin: 0.4rem auto;\n                outline: none;\n                padding: 0.5rem;\n                width: 80%;\n              }\n              \n              #input-bar {\n                align-items: center;\n                border: 1px solid #444;\n                box-sizing: border-box;\n                display: flex;\n                flex-direction: column;\n                justify-content: right;\n                position: relative;\n                width: 100%;\n                height: 10rem;\n              }\n              \n              #data-list {\n                border-left: 1px solid #444;\n                border-right: 1px solid #444;\n                box-sizing: border-box;\n                list-style-type: none;\n                margin: 0;\n                padding: 0;\n                width: 100%;\n              }\n              \n              article-post {\n                width: 100%;\n                height: 100%;\n              }\n              \n              @media screen and (min-width: 860px) {\n                #background {\n                  flex-direction: row;\n                  align-items: flex-start;\n                  max-width: 100%;\n                  margin: auto;\n                }\n                \n                #authorization-board {\n                  order:1;\n                  width: 15rem;\n                  align-items: flex-end;\n                }\n                \n                #search-input {\n                  order:3;\n                  width: 15rem;\n                  margin: 0 0 0 1rem;\n                }\n                \n                #main-board {\n                  order:2;\n                  max-width: 35rem;\n                  margin:0;\n                }\n              }\n            </style>\n            <div id="background"> \n              <div id="authorization-board"></div>\n              <input id="search-input" type="text" placeholder="Search"> \n              <div id="main-board">\n                <div id="input-bar"></div>\n                <ul id="data-list"></ul>\n              </div>\n            </div>\n        '}}customElements.define("app-home",x);class v{static instance=null;constructor(){this.router=new(e())("/",!0,"#")}static getInstance(){return v.instance||(v.instance=new v),v.instance}static inject(n){const e=document.querySelector("main");for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(n)}init(){this.router.on((()=>{v.inject(new x)})).resolve(),[{path:"/home",component:x}].forEach((n=>{this.router.on(n.path,(e=>{v.inject(new n.component(e))})).resolve()}))}}new class{constructor(){(new v).init()}}})()})();